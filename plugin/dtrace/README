Dtrace
======

A simple plugin to run a DTrace script while your Rails app runs.

Installation:

  script/plugin install http://ruby-dtrace.rubyforge.org/svn/trunk/plugin/dtrace

Or copy the plugin/dtrace directory from the installed ruby-dtrace gem
to your app's vendor/plugins directory.

Choose a mode of operation:

The process running DTrace needs additional privileges: on Solaris,
you can grant the dtrace_* privileges, and on both Leopard and Solaris
you can run the process as root.

This plugin can run in two modes: you can run the whole app with
DTrace privileges, or you can run a helper process with the
privileges, and the app will use DRb to communicate with it.

If you choose to run the app as root, you need to set the :tracer
option to the dtrace macro to :self, and if you choose to run the
helper as root, you need to set the :tracer option to :helper.

Configuring the plugin:

Add the following line to either the specific controller you want
traced, or to the ApplicationController, in which case it will be
applied to every controller in your app:

  dtrace :on, :tracer => :self

  or

  dtrace :on, :tracer => :helper

You can also set the name of the script to be run, from the
vendor/plugins/dtrace/scripts/ directory with the :script option:

  dtrace :on, :tracer => :self, :script => 'rails_mysql.d'

There are two scripts in the distribution:
 * default.d
    - a very simple script to log system calls, which doesn't require
      a DTrace-enabled ruby.

 * rails_mysql.d
    - a simplified version of the script shown here:
      http://blogs.sun.com/bmc/entry/dtrace_on_rails, which relies on
      DTrace-enabled ruby, and the use of MySQL with the
      libmysqlclient-based adapter, not the pure-ruby adapter.

Troubleshooting:

If you don't get a DTrace report, check the log for messages like:

   DTrace start setup: unable to open dtrace (not root?)

(indicating a lack of privileges to start DTrace: check your setting
of the :tracer option, and how you are starting the application and/or
helper).

   DTrace start compile: probe description pid14484::mysql_real_query:entry does not match any probes

(indicating the function mysql_real_query isn't found: either you're
not using MySQL, or you are using the pure ruby client).

   DTrace start compile: probe description ruby15253:::function-entry does not match any probes

(indicating you are not using a DTrace-enabled ruby binary)

A DRb::DRbConnError reported by Rails, like this:

   druby://localhost:2999 - #<Errno::ECONNREFUSED: Connection refused - connect(2)>

indicates you've selected the :helper option, but the helper isn't
running. Check that your app can connect to localhost:2999 for the DRb
service the helper provides.

